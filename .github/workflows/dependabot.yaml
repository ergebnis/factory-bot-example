# https://docs.github.com/en/actions

name: "Dependabot"

on: # yamllint disable-line rule:truthy
  workflow_run:
    types:
      - "completed"
      - "requested"
    workflows:
      - "Integrate"

jobs:
  amend:
    name: "Amend"

    runs-on: "ubuntu-latest"

    if: >
      github.event_name == 'workflow_run' &&
      github.event.workflow_run.event == 'pull_request' &&
      github.event.action == 'requested' &&
      github.actor == 'dependabot[bot]'

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.5"
        with:
          fetch-depth: 0
          ref: "${{ github.event.workflow_run.head_branch }}"
          repository: "${{ github.repository }}"
          token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"

      - name: "Amend commit to trigger workflow with access to secrets"
        run: |
          git config user.email "bot@ergebn.is"
          git config user.name "ergebnis-bot"
          git commit --amend -m "$(git show -s --format=%B $(git rev-parse HEAD))" -m "[dependabot skip]"
          git push --force-with-lease

  merge:
    name: "Merge"

    runs-on: "ubuntu-latest"

    if: >
      github.event_name == 'workflow_run' &&
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' &&
      (
        github.actor == 'dependabot[bot]' ||
        github.actor == 'ergebnis-bot'
      ) && (
        startsWith(github.event.workflow_run.head_commit.message, 'composer(deps)') ||
        startsWith(github.event.workflow_run.head_commit.message, 'composer(deps-dev)') ||
        startsWith(github.event.workflow_run.head_commit.message, 'github-actions(deps)')
      )

    steps:
      - name: "Request review from @ergebnis-bot"
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0]
            const repository = context.repo

            const reviewers = [
              "ergebnis-bot",
            ]

            await github.rest.pulls.requestReviewers({
              owner: repository.owner,
              repo: repository.repo,
              pull_number: pullRequest.number,
              reviewers: reviewers,
            })

      - name: "Assign @ergebnis-bot"
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0]
            const repository = context.repo

            const assignees = [
              "ergebnis-bot",
            ]

            await github.rest.issues.addAssignees({
              owner: repository.owner,
              repo: repository.repo,
              assignees: assignees,
              issue_number: pullRequest.number
            })

      - name: "Approve pull request"
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0]
            const repository = context.repo

            await github.rest.pulls.createReview({
              event: "APPROVE",
              owner: repository.owner,
              repo: repository.repo,
              pull_number: pullRequest.number,
            })

      - name: "Merge pull request"
        uses: "actions/github-script@v5"
        with:
          github-token: "${{ secrets.ERGEBNIS_BOT_TOKEN }}"
          script: |
            const pullRequest = context.payload.workflow_run.pull_requests[0]
            const repository = context.repo

            await github.rest.pulls.merge({
              merge_method: "merge",
              owner: repository.owner,
              pull_number: pullRequest.number,
              repo: repository.repo,
            })
